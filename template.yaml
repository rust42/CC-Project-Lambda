AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  portfolio-lambda

  Sample SAM Template for portfolio-lambda

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20
    MemorySize: 512

Resources:
  AllBlogApiDomain:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: blog.api.k6sandeep.com
      EndpointConfiguration:
        Types:
          - REGIONAL
      SecurityPolicy: TLS_1_2
      RegionalCertificateArn: "arn:aws:acm:us-east-1:779574454656:certificate/8b2adc08-cc91-4bf5-8007-c563d6d66fd4"


  BlogsGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      CacheClusterEnabled: false
      CacheClusterSize: "0.5"
      Cors:
        AllowMethods: "'POST,GET,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
        AllowOrigin: "'*'"
        MaxAge: "'600'"
        AllowCredentials: false
      MethodSettings:
        - ResourcePath: /
          HttpMethod: GET

  ContactGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      CacheClusterEnabled: false
      CacheClusterSize: "0.5"
      Cors:
        AllowMethods: "'POST,GET,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
        AllowOrigin: "'*'"
        MaxAge: "'600'"
        AllowCredentials: false
      MethodSettings:
        - ResourcePath: /
          HttpMethod: POST

  ContactTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Contact
      AttributeDefinitions:
        - AttributeName: ID
          AttributeType: S
      KeySchema:
        - AttributeName: ID
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  BlogsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ./cc-project-lambda.jar
      Handler: blogs.App::handleRequest
      Runtime: java17
      Architectures:
        - x86_64
      MemorySize: 512
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE

      Events:
        Blogs:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /
            Method: GET
            RestApiId: !Ref BlogsGatewayApi

  ContactPostApi:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ./cc-project-lambda.jar
      Handler: blogs.Contact::handleRequest
      Runtime: java17
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ContactTable

      Architectures:
        - x86_64
      MemorySize: 512
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE

      Events:
        Blogs:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /
            Method: POST
            RestApiId: !Ref ContactGatewayApi

  ContactDynamoDBStreamer:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: java17
      CodeUri: ./cc-project-lambda.jar
      Handler: blogs.ContactTableStreamer::handleRequest
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref ContactTable
        - SESCrudPolicy:
            identityName: "k6sandeep.com"
      Architectures:
        - x86_64
      MemorySize: 512
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt ContactTable.StreamArn
            BatchSize: 10
            StartingPosition: LATEST

  BlogApiBasePath:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      BasePath: "blog"
      DomainName: !Ref AllBlogApiDomain
      RestApiId: !Ref BlogsGatewayApi
      Stage: !Ref BlogsGatewayApi.Stage

  ContactApiBasePath:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      BasePath: "contact"
      DomainName: !Ref AllBlogApiDomain
      RestApiId: !Ref ContactGatewayApi
      Stage: !Ref ContactGatewayApi.Stage

  #
  WebsiteDNSName:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: "Z05093165SS7MHO0JP43"
      RecordSets:
        - Name: "blog.api.k6sandeep.com."
          Type: A
          AliasTarget:
            DNSName: !GetAtt AllBlogApiDomain.RegionalDomainName # Assuming you use Regional Domain Name
            HostedZoneId: Z1UJRXOUMOOFQ8
##            DNSName: !GetAtt [ FrontEndAppDistribution, DomainName ]

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  BlogsApi:
    Description: "API Gateway endpoint URL for Prod stage for Blogs function"
    Value: !Sub "https://${BlogsGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/prod/"
  BlogsFunction:
    Description: "Blogs Function ARN"
    Value: !GetAtt BlogsFunction.Arn
  BlogsFunctionIamRole:
    Description: "Implicit IAM Role created for Blogs function"
    Value: !GetAtt BlogsFunction.Arn
